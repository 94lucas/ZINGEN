.btn{
    --btn-bg-color: var(--text-color-primary);
    --btn-color: var(--bg-color) ;

    border: none;
    background-color: transparent;


    display: flex;
    align-items: center;
    justify-content: center;
    /*A largura do btn vai ser de acordo com o tamanho do conteudo*/
    width: fit-content;

    border-radius: .5rem;
    font: var(--fw-md) var(--fs-base)/1.5rem var(--ff-sans);

    cursor: pointer;

    background: var(--btn-bg-color);
    color: var(--btn-color);
}

.btn:hover{
    --btn-bg-color: linear-gradient(
        90deg, var(--brand-color-secondary) 0%,
        var(--brand-color-primary) 100%
    );
    --btn-color: var(--surface-color);

    -webkit-backgroud-clip:initial;
    background-clip: initial;
    color: var(--btn-color); 

}

.btn-sm{
    padding: .5rem 1rem;
    font-size: var(--fs-sm);
}

.btn-md{
    padding: .75rem 1.5rem;
    font-size: var(--fs-base);

}

.btn-lg{
    padding: 1rem 2rem;
    font-size: 1.125rem;
}

.btn[aria-label]{
    position: relative;


    /*Para fazer a borda em degrade*/
    &::before{
        content: "";
        position: absolute;
        border-radius: inherit;
        /*Quando eu faço o inset 0 quer dizer que eu tenho todo o meu botão
        na cor do background aqui --bg-color. Contudo, se eu usar o 0.5 eu crio uma bordinha 
        */
        inset: 1.5px;
        background-color: var(--bg-color);
    }
    &::after{
        /* attr ele ta pegando um atributo*/
        content: attr(aria-label);
        background: var(--btn-bg-color);

        /* É tipo um recorte conforme o texto ai usamos esses dois atributos*/
        -webkit-background-clip: text;
        background-clip: text ;
        color: transparent;   
        position: relative;
        z-index: 1;     
    }
}

@media (width >= 80em) {
    

    .btn-sm{
        padding: .75rem 1.5rem;
        font-size: var(--fs-base);

    }

    .btn-md{
        padding: 1rem 2rem;
        font-size: 1.125rem;
    }
}